apiVersion: v1
kind: Namespace
metadata:
  name: internet-of-babel
  labels:
    name: internet-of-babel
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: babelcom
  namespace: internet-of-babel
  labels:
    app: babelcom
spec:
  replicas: 1
  selector:
    matchLabels:
      app: babelcom
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: babelcom
    spec:
      containers:
      - name: babelcom
        image: ghcr.io/johncave/internet-of-babel/babelcom:latest
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: PORT
          value: "8080"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      securityContext:
        fsGroup: 1001
---
apiVersion: v1
kind: Service
metadata:
  name: babelcom-service
  namespace: internet-of-babel
  labels:
    app: babelcom
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: babelcom
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: babelcom-ingress
  namespace: internet-of-babel
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # WebSocket support
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/proxy-set-headers: "Connection upgrade, Upgrade $http_upgrade"
spec:
  tls:
  - hosts:
    - babelcom.johncave.co.nz
    secretName: babelcom-tls
  rules:
  - host: babelcom.johncave.co.nz
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: babelcom-service
            port:
              number: 80 